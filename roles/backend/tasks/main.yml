- name: Disable default NodeJS Version Module
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable NodeJS module for V20
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: Adding Application User
  ansible.builtin.user:
    name: "{{app_user}}"

- name: Import App Pre Requisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

#- name: Download NodeJS Dependencies
#  community.general.npm:
#    path: /app
#    state: latest

- name: Copy Backend Service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Install Python MySQL Client
  ansible.builtin.pip:
    name:
      - PyMySQL
      - cryptography
    executable: pip3.11

- name: Install MySQL Client
  ansible.builtin.dnf:
    name: mysql
    state: installed

#- name: Load Schema
#  ansible.builtin.shell: mysql -h mysql-{{env}}.angadicnc.online -uroot -p{{mysql_root_password}} < /app/schema/backend.sql

#- name: Load Schema
#  ansible.builtin.shell: mysql -h {{ rds_endpoint }} -u {{ rds_username }} -p{{ rds_password }} < /app/schema/backend.sql
##  ansible.builtin.shell: msql -h mysql-{{env}}.angadicnc.online -u {{ rds_username }} -p{{ rds_password }} < /app/schema/backend.sql

- name: Load Schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: "{{rds_username}}"
    login_password: "{{rds_password}}"
    login_host: "{{ rds_endpoint }}"

#- name: Load Schema
#  community.mysql.mysql_db:
#    state: import
#    name: all
#    target: /app/schema/backend.sql
#    login_user: root
#    login_password: "{{mysql_root_password}}"
#    login_host: mysql-{{env}}.angadicnc.online

- name: Import NewRelic NodeJS Setup
  ansible.builtin.import_role:
    name: newrelic
    tasks_from: nodejs

- name: Start Backend Service
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    enabled: yes
    daemon_reload: yes